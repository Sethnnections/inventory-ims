<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Inventory Management</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css">
    
    <style>
        .card-stats .icon-shape {
            width: 48px;
            height: 48px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .table th {
            border-top: none;
            font-weight: 600;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        .badge {
            font-size: 0.75rem;
            padding: 0.35em 0.65em;
        }
        .category-badge {
            font-size: 0.7rem;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <%- include('../partials/header') %>

    <div class="container-fluid mt-4">
        <div class="row">
            <!-- Sidebar -->
            <%- include('../partials/sidebar') %>
            
            <!-- Main Content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <h2 class="h4 fw-bold mb-1">
                            <i class="fas fa-tags text-primary me-2"></i>Category Management
                        </h2>
                        <p class="text-muted mb-0">Manage product categories and organization</p>
                    </div>
                    <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createCategoryModal">
                        <i class="fas fa-plus me-2"></i>Add Category
                    </button>
                </div>

                <!-- Alert Container -->
                <div id="alertContainer"></div>

                <!-- Stats Cards -->
                <div class="row mb-4">
                    <div class="col-md-4">
                        <div class="card card-stats">
                            <div class="card-body">
                                <div class="d-flex align-items-center">
                                    <div class="icon icon-shape bg-primary text-white rounded-circle shadow">
                                        <i class="fas fa-tags"></i>
                                    </div>
                                    <div class="ms-3">
                                        <p class="card-title text-sm mb-0">Total Categories</p>
                                        <h3 class="card-text fw-bold" id="totalCategoriesCount">0</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card card-stats">
                            <div class="card-body">
                                <div class="d-flex align-items-center">
                                    <div class="icon icon-shape bg-success text-white rounded-circle shadow">
                                        <i class="fas fa-boxes"></i>
                                    </div>
                                    <div class="ms-3">
                                        <p class="card-title text-sm mb-0">Total Products</p>
                                        <h3 class="card-text fw-bold" id="totalProductsCount">0</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card card-stats">
                            <div class="card-body">
                                <div class="d-flex align-items-center">
                                    <div class="icon icon-shape bg-info text-white rounded-circle shadow">
                                        <i class="fas fa-layer-group"></i>
                                    </div>
                                    <div class="ms-3">
                                        <p class="card-title text-sm mb-0">Avg Products/Category</p>
                                        <h3 class="card-text fw-bold" id="avgProductsCount">0</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Categories Table -->
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-list me-2"></i>Categories List
                        </h5>
                        <div class="d-flex gap-2">
                            <input type="text" id="searchCategories" class="form-control form-control-sm" placeholder="Search categories..." style="width: 200px;">
                            <button class="btn btn-outline-secondary btn-sm" onclick="refreshCategories()" title="Refresh">
                                <i class="fas fa-sync-alt"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover w-100" id="categoriesDataTable">
                                <thead class="table-light">
                                    <tr>
                                        <th width="5%">#</th>
                                        <th width="25%">Category Name</th>
                                        <th width="40%">Description</th>
                                        <th width="15%">Products</th>
                                        <th width="15%">Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="categoriesTableBody">
                                    <tr>
                                        <td colspan="5" class="text-center py-4">
                                            <div class="spinner-border text-primary" role="status">
                                                <span class="visually-hidden">Loading categories...</span>
                                            </div>
                                            <div class="mt-2 text-muted">Loading categories...</div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Create Category Modal -->
    <div class="modal fade" id="createCategoryModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create New Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="createCategoryForm">
                        <div class="mb-3">
                            <label for="categoryName" class="form-label">Category Name *</label>
                            <input type="text" class="form-control" id="categoryName" name="name" required>
                            <div class="form-text">Enter a unique category name</div>
                        </div>
                        <div class="mb-3">
                            <label for="categoryDescription" class="form-label">Description *</label>
                            <textarea class="form-control" id="categoryDescription" name="description" rows="3" required></textarea>
                            <div class="form-text">Describe this category</div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="createCategoryBtn" onclick="createCategory()">
                        <span class="spinner-border spinner-border-sm d-none" role="status"></span>
                        Create Category
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Category Modal -->
    <div class="modal fade" id="editCategoryModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Category</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editCategoryForm">
                        <input type="hidden" id="editCategoryId" name="id">
                        <div class="mb-3">
                            <label for="editCategoryName" class="form-label">Category Name *</label>
                            <input type="text" class="form-control" id="editCategoryName" name="name" required>
                        </div>
                        <div class="mb-3">
                            <label for="editCategoryDescription" class="form-label">Description *</label>
                            <textarea class="form-control" id="editCategoryDescription" name="description" rows="3" required></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="updateCategoryBtn" onclick="updateCategory()">
                        <span class="spinner-border spinner-border-sm d-none" role="status"></span>
                        Update Category
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteCategoryModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-danger">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete category: <strong id="deleteCategoryName"></strong>?</p>
                    <p class="text-danger">This action cannot be undone. All products in this category will need to be reassigned.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn" onclick="confirmDeleteCategory()">
                        <span class="spinner-border spinner-border-sm d-none" role="status"></span>
                        Delete Category
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

    <script>
        // Global variables
        let allCategories = [];
        let categoryToDelete = null;
        let categoriesDataTable = null;

        // Initialize DataTables
        function initializeDataTable() {
            categoriesDataTable = $('#categoriesDataTable').DataTable({
                processing: true,
                serverSide: false,
                responsive: true,
                ordering: true,
                order: [[1, 'asc']],
                pageLength: 10,
                lengthMenu: [[10, 25, 50, 100], [10, 25, 50, 100]],
                language: {
                    search: "_INPUT_",
                    searchPlaceholder: "Search categories...",
                    lengthMenu: "Show _MENU_ entries",
                    info: "Showing _START_ to _END_ of _TOTAL_ categories",
                    infoEmpty: "Showing 0 to 0 of 0 categories",
                    infoFiltered: "(filtered from _MAX_ total categories)",
                    paginate: {
                        first: "First",
                        last: "Last",
                        next: "Next",
                        previous: "Previous"
                    }
                }
            });
        }

        // Load all categories
        async function loadCategories() {
            try {
                showLoadingState();
                
                const response = await fetch('/api/category/getcategory');
                
                if (!response.ok) {
                    throw new Error('Failed to fetch categories');
                }

                const data = await response.json();
                allCategories = data.categoriesWithCount || [];
                
                // Update stats
                updateCategoryStats(allCategories);
                
                // Populate DataTable
                if (!categoriesDataTable) {
                    initializeDataTable();
                }
                
                categoriesDataTable.clear();
                categoriesDataTable.rows.add(allCategories);
                categoriesDataTable.draw();

                // Setup search
                $('#searchCategories').on('keyup', function() {
                    categoriesDataTable.search(this.value).draw();
                });

            } catch (error) {
                console.error('Error loading categories:', error);
                showAlert('Error loading categories. Please try again.', 'danger');
                displayErrorState();
            }
        }

        // Update category statistics
        function updateCategoryStats(categories) {
            const totalCategories = categories.length;
            const totalProducts = categories.reduce((sum, category) => sum + (category.productCount || 0), 0);
            const avgProducts = totalCategories > 0 ? (totalProducts / totalCategories).toFixed(1) : 0;

            document.getElementById('totalCategoriesCount').textContent = totalCategories;
            document.getElementById('totalProductsCount').textContent = totalProducts;
            document.getElementById('avgProductsCount').textContent = avgProducts;
        }

        // Create new category
        async function createCategory() {
            const form = document.getElementById('createCategoryForm');
            const submitBtn = document.getElementById('createCategoryBtn');
            const spinner = submitBtn.querySelector('.spinner-border');
            
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const formData = new FormData(form);
            const categoryData = {
                name: formData.get('name'),
                description: formData.get('description')
            };

            try {
                submitBtn.disabled = true;
                spinner.classList.remove('d-none');

                const response = await fetch('/api/category/createcategory', {
                    method: 'POST',
                    headers: { 
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(categoryData)
                });

                const data = await response.json();

                if (response.ok) {
                    showAlert('Category created successfully!', 'success');
                    $('#createCategoryModal').modal('hide');
                    form.reset();
                    loadCategories();
                } else {
                    showAlert(data.message || 'Error creating category', 'danger');
                }
            } catch (error) {
                console.error('Create category error:', error);
                showAlert('Network error. Please try again.', 'danger');
            } finally {
                submitBtn.disabled = false;
                spinner.classList.add('d-none');
            }
        }

        // Edit category
        async function editCategory(categoryId) {
            const category = allCategories.find(c => c._id === categoryId);
            if (!category) return;

            document.getElementById('editCategoryId').value = category._id;
            document.getElementById('editCategoryName').value = category.name;
            document.getElementById('editCategoryDescription').value = category.description;

            $('#editCategoryModal').modal('show');
        }

        // Update category
        async function updateCategory() {
            const form = document.getElementById('editCategoryForm');
            const submitBtn = document.getElementById('updateCategoryBtn');
            const spinner = submitBtn.querySelector('.spinner-border');
            
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const categoryId = document.getElementById('editCategoryId').value;
            const updateData = {
                name: document.getElementById('editCategoryName').value,
                description: document.getElementById('editCategoryDescription').value
            };

            try {
                submitBtn.disabled = true;
                spinner.classList.remove('d-none');

                const response = await fetch(`/api/category/updateCategory`, {
                    method: 'PUT',
                    headers: { 
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        CategoryId: categoryId,
                        updatedCategory: updateData
                    })
                });

                const data = await response.json();

                if (response.ok) {
                    showAlert('Category updated successfully!', 'success');
                    $('#editCategoryModal').modal('hide');
                    loadCategories();
                } else {
                    showAlert(data.message || 'Error updating category', 'danger');
                }
            } catch (error) {
                showAlert('Network error. Please try again.', 'danger');
            } finally {
                submitBtn.disabled = false;
                spinner.classList.add('d-none');
            }
        }

        // Show delete confirmation
        function showDeleteConfirmation(categoryId, categoryName) {
            categoryToDelete = categoryId;
            document.getElementById('deleteCategoryName').textContent = categoryName;
            $('#deleteCategoryModal').modal('show');
        }

        // Confirm delete
        async function confirmDeleteCategory() {
            if (!categoryToDelete) return;

            const submitBtn = document.getElementById('confirmDeleteBtn');
            const spinner = submitBtn.querySelector('.spinner-border');

            try {
                submitBtn.disabled = true;
                spinner.classList.remove('d-none');

                const response = await fetch(`/api/category/removecategory/${categoryToDelete}`, {
                    method: 'DELETE'
                });

                const data = await response.json();

                if (response.ok) {
                    showAlert('Category deleted successfully!', 'success');
                    $('#deleteCategoryModal').modal('hide');
                    loadCategories();
                } else {
                    showAlert(data.message || 'Error deleting category', 'danger');
                }
            } catch (error) {
                console.error('Delete error:', error);
                showAlert('Network error. Please try again.', 'danger');
            } finally {
                submitBtn.disabled = false;
                spinner.classList.add('d-none');
                categoryToDelete = null;
            }
        }

        // Refresh categories
        function refreshCategories() {
            loadCategories();
            showAlert('Categories list refreshed', 'info');
        }

        // Utility functions
        function showAlert(message, type) {
            const alertContainer = document.getElementById('alertContainer');
            const alert = document.createElement('div');
            alert.className = `alert alert-${type} alert-dismissible fade show`;
            alert.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            alertContainer.appendChild(alert);
            setTimeout(() => alert.remove(), 5000);
        }

        function showLoadingState() {
            const tbody = document.getElementById('categoriesTableBody');
            tbody.innerHTML = `
                <tr>
                    <td colspan="5" class="text-center py-4">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading categories...</span>
                        </div>
                        <div class="mt-2 text-muted">Loading categories...</div>
                    </td>
                </tr>
            `;
        }

        function displayErrorState() {
            const tbody = document.getElementById('categoriesTableBody');
            tbody.innerHTML = `
                <tr>
                    <td colspan="5" class="text-center py-4">
                        <i class="fas fa-exclamation-triangle fa-2x text-danger mb-3"></i>
                        <div>Failed to load categories</div>
                        <button class="btn btn-primary mt-2" onclick="loadCategories()">
                            <i class="fas fa-redo"></i> Try Again
                        </button>
                    </td>
                </tr>
            `;
        }

        // Initialize when page loads
        document.addEventListener('DOMContentLoaded', function() {
            initializeDataTable();
            loadCategories();
        });
    </script>
</body>
</html>